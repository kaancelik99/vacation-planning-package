<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='flight_data_usa.csv (Multiple Connections)' inline='true' name='federated.0ubgqwk0tveaxz155y1ap1plja5e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='hotels_usa' name='textscan.1kd3zwc0cl4r4715t6g001ls4ayw'>
            <connection class='textscan' directory='C:/Users/skce222/Documents/vacation-planning-package/data' filename='hotels_usa.csv' password='' server='' />
          </named-connection>
          <named-connection caption='flights_tableau' name='textscan.1pmvxzv1v0k6xf17b9tvx0rda9g9'>
            <connection class='textscan' directory='C:/Users/skce222/Documents/vacation-planning-package/data' filename='flights_tableau.csv' password='' server='' />
          </named-connection>
          <named-connection caption='flights_tableau (2)' name='textscan.1ih6hd209izdsh14ta2h81whbye1'>
            <connection class='textscan' directory='C:/Users/skce222/Documents/vacation-planning-package/data' filename='flights_tableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation all='true' name='flights_tableau.csv+' type='union'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='From Airport Code' />
              <column datatype='string' name='From Country' />
              <column datatype='string' name='Dest Airport Code' />
              <column datatype='string' name='City,   State' />
              <column datatype='string' name='Dest Country' />
              <column datatype='string' name='Aircraft Type' />
              <column datatype='string' name='Airline Number' />
              <column datatype='string' name='Airline Name' />
              <column datatype='string' name='Flight Number' />
              <column datatype='datetime' name='Departure Time' />
              <column datatype='datetime' name='Arrival Time' />
              <column datatype='integer' name='Duration' />
              <column datatype='integer' name='Stops' />
              <column datatype='integer' name='Price' />
              <column datatype='string' name='Currency' />
              <column datatype='integer' name='Co2 Emissions' />
              <column datatype='integer' name='Avg Co2 Emission For This Route' />
              <column datatype='real' name='Co2 Percentage' />
              <column datatype='datetime' name='Scan Date' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='textscan.1pmvxzv1v0k6xf17b9tvx0rda9g9' name='flights_tableau.csv' table='[flights_tableau#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='From Airport Code' ordinal='0' />
                <column datatype='string' name='From Country' ordinal='1' />
                <column datatype='string' name='Dest Airport Code' ordinal='2' />
                <column datatype='string' name='City,   State' ordinal='3' />
                <column datatype='integer' name='ZIP Code' ordinal='4' />
                <column datatype='string' name='Dest Country' ordinal='5' />
                <column datatype='string' name='Aircraft Type' ordinal='6' />
                <column datatype='string' name='Airline Number' ordinal='7' />
                <column datatype='string' name='Airline Name' ordinal='8' />
                <column datatype='string' name='Flight Number' ordinal='9' />
                <column datatype='datetime' name='Departure Time' ordinal='10' />
                <column datatype='datetime' name='Arrival Time' ordinal='11' />
                <column datatype='integer' name='Duration' ordinal='12' />
                <column datatype='integer' name='Stops' ordinal='13' />
                <column datatype='integer' name='Price' ordinal='14' />
                <column datatype='string' name='Currency' ordinal='15' />
                <column datatype='integer' name='Co2 Emissions' ordinal='16' />
                <column datatype='integer' name='Avg Co2 Emission For This Route' ordinal='17' />
                <column datatype='real' name='Co2 Percentage' ordinal='18' />
                <column datatype='datetime' name='Scan Date' ordinal='19' />
              </columns>
            </relation>
            <relation connection='textscan.1pmvxzv1v0k6xf17b9tvx0rda9g9' name='flights_tableau.csv1' table='[flights_tableau#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='From Airport Code' ordinal='0' />
                <column datatype='string' name='From Country' ordinal='1' />
                <column datatype='string' name='Dest Airport Code' ordinal='2' />
                <column datatype='string' name='City,   State' ordinal='3' />
                <column datatype='integer' name='ZIP Code' ordinal='4' />
                <column datatype='string' name='Dest Country' ordinal='5' />
                <column datatype='string' name='Aircraft Type' ordinal='6' />
                <column datatype='string' name='Airline Number' ordinal='7' />
                <column datatype='string' name='Airline Name' ordinal='8' />
                <column datatype='string' name='Flight Number' ordinal='9' />
                <column datatype='datetime' name='Departure Time' ordinal='10' />
                <column datatype='datetime' name='Arrival Time' ordinal='11' />
                <column datatype='integer' name='Duration' ordinal='12' />
                <column datatype='integer' name='Stops' ordinal='13' />
                <column datatype='integer' name='Price' ordinal='14' />
                <column datatype='string' name='Currency' ordinal='15' />
                <column datatype='integer' name='Co2 Emissions' ordinal='16' />
                <column datatype='integer' name='Avg Co2 Emission For This Route' ordinal='17' />
                <column datatype='real' name='Co2 Percentage' ordinal='18' />
                <column datatype='datetime' name='Scan Date' ordinal='19' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1pmvxzv1v0k6xf17b9tvx0rda9g9' name='hotels_usa.csv' table='[hotels_usa#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='countyCode' ordinal='0' />
              <column datatype='string' name='countyName' ordinal='1' />
              <column datatype='integer' name='cityCode' ordinal='2' />
              <column datatype='string' name='cityName' ordinal='3' />
              <column datatype='integer' name='HotelCode' ordinal='4' />
              <column datatype='string' name='HotelName' ordinal='5' />
              <column datatype='string' name='HotelRating' ordinal='6' />
              <column datatype='string' name='Address' ordinal='7' />
              <column datatype='string' name='Attractions' ordinal='8' />
              <column datatype='string' name='Description' ordinal='9' />
              <column datatype='string' name='FaxNumber' ordinal='10' />
              <column datatype='string' name='HotelFacilities' ordinal='11' />
              <column datatype='string' name='Map' ordinal='12' />
              <column datatype='string' name='PhoneNumber' ordinal='13' />
              <column datatype='string' name='PinCode' ordinal='14' />
              <column datatype='string' name='HotelWebsiteUrl' ordinal='15' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>From Airport Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[From Airport Code]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>From Airport Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>From Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[From Country]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>From Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dest Airport Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dest Airport Code]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Dest Airport Code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City,   State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City,   State]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>City,   State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIP Code]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>ZIP Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dest Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Dest Country]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Dest Country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Aircraft Type]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Aircraft Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline Number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline Number]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Airline Number</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline Name]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Airline Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight Number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flight Number]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Flight Number</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Departure Time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Departure Time]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Departure Time</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrival Time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Arrival Time]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Arrival Time</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Duration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Duration]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Duration</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stops</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stops]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Stops</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Currency]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Currency</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Co2 Emissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Co2 Emissions]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Co2 Emissions</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg Co2 Emission For This Route</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Avg Co2 Emission For This Route]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Avg Co2 Emission For This Route</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Co2 Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Co2 Percentage]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Co2 Percentage</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scan Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Scan Date]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Scan Date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[flights_tableau.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyCode]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>countyCode</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countyName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countyName]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>countyName</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cityCode]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>cityCode</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cityName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cityName]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>cityName</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HotelCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HotelCode]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>HotelCode</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HotelName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HotelName]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>HotelName</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HotelRating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HotelRating]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>HotelRating</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Attractions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Attractions]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>Attractions</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FaxNumber</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FaxNumber]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>FaxNumber</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HotelFacilities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HotelFacilities]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>HotelFacilities</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Map</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Map]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>Map</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PhoneNumber</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PhoneNumber]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>PhoneNumber</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PinCode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PinCode]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>PinCode</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HotelWebsiteUrl</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HotelWebsiteUrl]</local-name>
            <parent-name>[hotels_usa.csv]</parent-name>
            <remote-alias>HotelWebsiteUrl</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unique Flights' datatype='string' name='[Calculation_1278459372137807872]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([Flight Number]) + &quot;-&quot; + [From Country] + &quot;-&quot; + STR([ZIP Code])' />
      </column>
      <column caption='Path Order' datatype='integer' name='[Calculation_1278459372140072961]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Origin&apos; THEN 1 ELSE 2 END' />
      </column>
      <column aggregation='Avg' caption='Origin Latitude' datatype='real' name='[Calculation_1278459372143124484]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Origin&apos; THEN&#13;&#10;  IF [From Country] = &apos;Algeria&apos; THEN 28.0339&#13;&#10;  ELSEIF [From Country] = &apos;Argentina&apos; THEN -38.4161&#13;&#10;  ELSEIF [From Country] = &apos;Australia&apos; THEN -25.2744&#13;&#10;  ELSEIF [From Country] = &apos;Austria&apos; THEN 47.5162&#13;&#10;  ELSEIF [From Country] = &apos;Belgium&apos; THEN 50.5039&#13;&#10;  ELSEIF [From Country] = &apos;Brazil&apos; THEN -14.2350&#13;&#10;  ELSEIF [From Country] = &apos;Canada&apos; THEN 56.1304&#13;&#10;  ELSEIF [From Country] = &apos;Chile&apos; THEN -35.6751&#13;&#10;  ELSEIF [From Country] = &apos;China&apos; THEN 35.8617&#13;&#10;  ELSEIF [From Country] = &apos;Columbia&apos; THEN 4.5709&#13;&#10;  ELSEIF [From Country] = &apos;Denmark&apos; THEN 56.2639&#13;&#10;  ELSEIF [From Country] = &apos;Dublin&apos; THEN 53.3498&#13;&#10;  ELSEIF [From Country] = &apos;Egypt&apos; THEN 26.8206&#13;&#10;  ELSEIF [From Country] = &apos;Ethiopia&apos; THEN 9.1450&#13;&#10;  ELSEIF [From Country] = &apos;France&apos; THEN 46.2276&#13;&#10;  ELSEIF [From Country] = &apos;Germany&apos; THEN 51.1657&#13;&#10;  ELSEIF [From Country] = &apos;Greece&apos; THEN 39.0742&#13;&#10;  ELSEIF [From Country] = &apos;India&apos; THEN 20.5937&#13;&#10;  ELSE NULL&#13;&#10;END&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column aggregation='Avg' caption='Origin Longitude' datatype='real' name='[Calculation_1278459372146323461]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Origin&apos; THEN&#13;&#10;  IF [From Country] = &apos;Algeria&apos; THEN 1.6596&#13;&#10;  ELSEIF [From Country] = &apos;Argentina&apos; THEN -63.6167&#13;&#10;  ELSEIF [From Country] = &apos;Australia&apos; THEN 133.7751&#13;&#10;  ELSEIF [From Country] = &apos;Austria&apos; THEN 14.5501&#13;&#10;  ELSEIF [From Country] = &apos;Belgium&apos; THEN 4.4699&#13;&#10;  ELSEIF [From Country] = &apos;Brazil&apos; THEN -51.9253&#13;&#10;  ELSEIF [From Country] = &apos;Canada&apos; THEN -106.3468&#13;&#10;  ELSEIF [From Country] = &apos;Chile&apos; THEN -71.5430&#13;&#10;  ELSEIF [From Country] = &apos;China&apos; THEN 104.1954&#13;&#10;  ELSEIF [From Country] = &apos;Columbia&apos; THEN -74.2973 // Colombia&#13;&#10;  ELSEIF [From Country] = &apos;Denmark&apos; THEN 9.5018&#13;&#10;  ELSEIF [From Country] = &apos;Dublin&apos; THEN -6.2603&#13;&#10;  ELSEIF [From Country] = &apos;Egypt&apos; THEN 30.8025&#13;&#10;  ELSEIF [From Country] = &apos;Ethiopia&apos; THEN 40.4897&#13;&#10;  ELSEIF [From Country] = &apos;France&apos; THEN 2.2137&#13;&#10;  ELSEIF [From Country] = &apos;Germany&apos; THEN 10.4515&#13;&#10;  ELSEIF [From Country] = &apos;Greece&apos; THEN 21.8243&#13;&#10;  ELSEIF [From Country] = &apos;India&apos; THEN 78.9629&#13;&#10;  ELSE NULL&#13;&#10;END&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column aggregation='Avg' caption='Dest Latitude' datatype='real' name='[Calculation_1278459372147580934]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Destination&apos; THEN&#13;&#10;  IF [ZIP Code] = 11430 THEN 40.7767&#13;&#10;  ELSEIF [ZIP Code] = 28208 THEN 35.2010&#13;&#10;  ELSEIF [ZIP Code] = 30320 THEN 33.6762&#13;&#10;  ELSEIF [ZIP Code] = 32827 THEN 28.4290&#13;&#10;  ELSEIF [ZIP Code] = 33142 THEN 25.7923&#13;&#10;  ELSEIF [ZIP Code] = 33315 THEN 26.1844&#13;&#10;  ELSEIF [ZIP Code] = 60666 THEN 41.9760&#13;&#10;  ELSEIF [ZIP Code] = 77032 THEN 29.6974&#13;&#10;  ELSEIF [ZIP Code] = 85034 THEN 33.4942&#13;&#10;  ELSEIF [ZIP Code] = 90045 THEN 33.9568&#13;&#10;  ELSEIF [ZIP Code] = 94128 THEN 37.7263&#13;&#10;  ELSEIF [ZIP Code] = 98158 THEN 47.5187&#13;&#10;  ELSE NULL&#13;&#10;END&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column aggregation='Avg' caption='Dest Longitude' datatype='real' name='[Calculation_1278459372148592647]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Destination&apos; THEN&#13;&#10;  IF [ZIP Code] = 11430 THEN -73.8301&#13;&#10;  ELSEIF [ZIP Code] = 28208 THEN -80.8480&#13;&#10;  ELSEIF [ZIP Code] = 30320 THEN -84.4173&#13;&#10;  ELSEIF [ZIP Code] = 32827 THEN -81.4683&#13;&#10;  ELSEIF [ZIP Code] = 33142 THEN -80.2080&#13;&#10;  ELSEIF [ZIP Code] = 33315 THEN -80.2393&#13;&#10;  ELSEIF [ZIP Code] = 60666 THEN -87.9073&#13;&#10;  ELSEIF [ZIP Code] = 77032 THEN -95.3298&#13;&#10;  ELSEIF [ZIP Code] = 85034 THEN -112.0780&#13;&#10;  ELSEIF [ZIP Code] = 90045 THEN -118.4015&#13;&#10;  ELSEIF [ZIP Code] = 94128 THEN -122.3921&#13;&#10;  ELSEIF [ZIP Code] = 98158 THEN -122.3977&#13;&#10;  ELSE NULL&#13;&#10;END&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column aggregation='Avg' caption='Combined Latitude' datatype='real' name='[Calculation_1278459372151197704]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Origin&apos; THEN [Calculation_1278459372143124484]&#13;&#10;ELSEIF [Calculation_332984924998316046] = &apos;Destination&apos; THEN [Calculation_1278459372147580934]&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column aggregation='Avg' caption='Combined Longitude' datatype='real' name='[Calculation_1278459372151250953]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Origin&apos; THEN [Calculation_1278459372146323461]&#13;&#10;ELSEIF [Calculation_332984924998316046] = &apos;Destination&apos; THEN [Calculation_1278459372148592647]&#13;&#10;ELSE NULL&#13;&#10;END' />
      </column>
      <column caption='Row Number' datatype='integer' name='[Calculation_332984924968636417]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='State Hotels' datatype='string' name='[Calculation_332984924983996421]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='TRIM(SPLIT([cityName], &quot;,&quot;, 2))' />
      </column>
      <column caption='State Code Hotels' datatype='string' name='[Calculation_332984924984299526]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_332984924983996421] = &apos;Alabama&apos; THEN &apos;AL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Alaska&apos; THEN &apos;AK&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Arizona&apos; THEN &apos;AZ&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Arkansas&apos; THEN &apos;AR&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;California&apos; THEN &apos;CA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Colorado&apos; THEN &apos;CO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Connecticut&apos; THEN &apos;CT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Delaware&apos; THEN &apos;DE&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Florida&apos; THEN &apos;FL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Georgia&apos; THEN &apos;GA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Hawaii&apos; THEN &apos;HI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Hawaii County&apos; THEN &apos;HI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Idaho&apos; THEN &apos;ID&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Illinois&apos; THEN &apos;IL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Indiana&apos; THEN &apos;IN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Iowa&apos; THEN &apos;IA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Kansas&apos; THEN &apos;KS&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Kentucky&apos; THEN &apos;KY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Louisiana&apos; THEN &apos;LA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Maine&apos; THEN &apos;ME&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Maryland&apos; THEN &apos;MD&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Massachusetts&apos; THEN &apos;MA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Michigan&apos; THEN &apos;MI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Minnesota&apos; THEN &apos;MN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Mississippi&apos; THEN &apos;MS&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;MISSOURI&apos; THEN &apos;MO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Missouri&apos; THEN &apos;MO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Montana&apos; THEN &apos;MT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Nebraska&apos; THEN &apos;NE&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Nevada&apos; THEN &apos;NV&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Hampshire&apos; THEN &apos;NH&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Jersey&apos; THEN &apos;NJ&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Mexico&apos; THEN &apos;NM&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New York&apos; THEN &apos;NY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;North Carolina&apos; THEN &apos;NC&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;North Dakota&apos; THEN &apos;ND&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Ohio&apos; THEN &apos;OH&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Oklahoma&apos; THEN &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Oregon&apos; THEN &apos;OR&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Pennsylvania&apos; THEN &apos;PA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Rhode Island&apos; THEN &apos;RI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;South Carolina&apos; THEN &apos;SC&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;South Dakota&apos; THEN &apos;SD&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Tennessee&apos; THEN &apos;TN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Texas&apos; THEN &apos;TX&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Utah&apos; THEN &apos;UT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Vermont&apos; THEN &apos;VT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Virginia&apos; THEN &apos;VA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Washington&apos; THEN &apos;WA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;West Virginia&apos; THEN &apos;WV&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Wisconsin&apos; THEN &apos;WI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Wyoming&apos; THEN &apos;WY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;District of Columbia&apos; THEN &apos;DC&apos;&#13;&#10;END' />
      </column>
      <column caption='Number of Hotels per State' datatype='integer' name='[Calculation_332984924985552903]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_332984924984299526])' />
      </column>
      <column caption='Rating' datatype='integer' name='[Calculation_332984924987387912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [HotelRating] = &apos;OneStar&apos; THEN 1&#13;&#10;ELSEIF [HotelRating] = &apos;TwoStar&apos; THEN 2&#13;&#10;ELSEIF [HotelRating] = &apos;ThreeStar&apos; THEN 3&#13;&#10;ELSEIF [HotelRating] = &apos;FourStar&apos; THEN 4&#13;&#10;ELSEIF [HotelRating] = &apos;FiveStar&apos; THEN 5&#13;&#10;ELSEIF [HotelRating] = &apos;All&apos; THEN 0&#13;&#10;END' />
      </column>
      <column caption='State Flights' datatype='string' name='[Calculation_332984924990337033]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='TRIM(SPLIT([City,   State], &quot;,&quot;, 2))' />
      </column>
      <column aggregation='Sum' caption='ZIP Code Flights' datatype='integer' default-format='*00000' name='[Calculation_332984924991410186]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
        <calculation class='tableau' formula='IF [Dest Airport Code] = &apos;ATL&apos; THEN 30320&#13;&#10;ELSEIF [Dest Airport Code] = &apos;CLT&apos; THEN 28208&#13;&#10;ELSEIF [Dest Airport Code] = &apos;ORD&apos; THEN 60666&#13;&#10;ELSEIF [Dest Airport Code] = &apos;FLL&apos; THEN 33315&#13;&#10;ELSEIF [Dest Airport Code] = &apos;IAH&apos; THEN 77032&#13;&#10;ELSEIF [Dest Airport Code] = &apos;LAX&apos; THEN 90045&#13;&#10;ELSEIF [Dest Airport Code] = &apos;MIA&apos; THEN 33142&#13;&#10;ELSEIF [Dest Airport Code] = &apos;JFK&apos; THEN 11430&#13;&#10;ELSEIF [Dest Airport Code] = &apos;MCO&apos; THEN 32827&#13;&#10;ELSEIF [Dest Airport Code] = &apos;PHX&apos; THEN 85034&#13;&#10;ELSEIF [Dest Airport Code] = &apos;SFO&apos; THEN 94128&#13;&#10;ELSEIF [Dest Airport Code] = &apos;SEA&apos; THEN 98158&#13;&#10;END' />
      </column>
      <column caption='Number of Flights per Country' datatype='integer' name='[Calculation_332984924992983051]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([From Country])' />
      </column>
      <column caption='Point Type' datatype='string' name='[Calculation_332984924998316046]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name] = &apos;flights_tableau.csv&apos; THEN &apos;Origin&apos;&#13;&#10;ELSE &apos;Destination&apos;&#13;&#10;END' />
      </column>
      <column caption='Location' datatype='string' name='[Calculation_332984924999311375]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Origin&apos; THEN [From Country]&#13;&#10;ELSE STR([Calculation_332984924991410186])&#13;&#10;END' />
      </column>
      <column caption='To City, State' datatype='string' name='[City,   State]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Dest Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Fax Number' datatype='string' name='[FaxNumber]' role='dimension' type='nominal' />
      <column datatype='string' name='[From Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Hotel Code' datatype='integer' name='[HotelCode]' role='dimension' type='ordinal' />
      <column caption='Hotel Facilities' datatype='string' name='[HotelFacilities]' role='dimension' type='nominal' />
      <column caption='Hotel Name' datatype='string' name='[HotelName]' role='dimension' type='nominal' />
      <column caption='Hotel Rating' datatype='string' name='[HotelRating]' role='dimension' type='nominal' />
      <column caption='Hotel Website Url' datatype='string' name='[HotelWebsiteUrl]' role='dimension' type='nominal' />
      <column caption='Phone Number' datatype='string' name='[PhoneNumber]' role='dimension' type='nominal' />
      <column caption='Pin Code' datatype='string' name='[PinCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[ZIP Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='flights_tableau.csv' datatype='table' name='[__tableau_internal_object_id__].[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]' role='measure' type='quantitative' />
      <column caption='hotels_usa.csv' datatype='table' name='[__tableau_internal_object_id__].[hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9]' role='measure' type='quantitative' />
      <column caption='City Code' datatype='integer' name='[cityCode]' role='dimension' type='ordinal' />
      <column caption='City Name' datatype='string' name='[cityName]' role='dimension' type='nominal' />
      <column caption='County Code' datatype='string' name='[countyCode]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Name' datatype='string' name='[countyName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column-instance column='[Calculation_1278459372146323461]' derivation='Attribute' name='[attr:Calculation_1278459372146323461:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1278459372143124484]' derivation='Avg' name='[avg:Calculation_1278459372143124484:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1278459372146323461]' derivation='Avg' name='[avg:Calculation_1278459372146323461:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1278459372147580934]' derivation='Avg' name='[avg:Calculation_1278459372147580934:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1278459372148592647]' derivation='Avg' name='[avg:Calculation_1278459372148592647:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1278459372146323461]' derivation='Min' name='[min:Calculation_1278459372146323461:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1278459372148592647]' derivation='Min' name='[min:Calculation_1278459372148592647:qk]' pivot='key' type='quantitative' />
      <layout common-percentage='1' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_1278459372147580934:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0ubgqwk0tveaxz155y1ap1plja5e]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ubgqwk0tveaxz155y1ap1plja5e].[attr:Calculation_1278459372146323461:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_1278459372146323461:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ubgqwk0tveaxz155y1ap1plja5e].[min:Calculation_1278459372146323461:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_1278459372148592647:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ubgqwk0tveaxz155y1ap1plja5e].[min:Calculation_1278459372148592647:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_1278459372143124484:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='flights_tableau.csv' id='flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3'>
            <properties context=''>
              <relation all='true' name='flights_tableau.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='From Airport Code' />
                  <column datatype='string' name='From Country' />
                  <column datatype='string' name='Dest Airport Code' />
                  <column datatype='string' name='City,   State' />
                  <column datatype='string' name='Dest Country' />
                  <column datatype='string' name='Aircraft Type' />
                  <column datatype='string' name='Airline Number' />
                  <column datatype='string' name='Airline Name' />
                  <column datatype='string' name='Flight Number' />
                  <column datatype='datetime' name='Departure Time' />
                  <column datatype='datetime' name='Arrival Time' />
                  <column datatype='integer' name='Duration' />
                  <column datatype='integer' name='Stops' />
                  <column datatype='integer' name='Price' />
                  <column datatype='string' name='Currency' />
                  <column datatype='integer' name='Co2 Emissions' />
                  <column datatype='integer' name='Avg Co2 Emission For This Route' />
                  <column datatype='real' name='Co2 Percentage' />
                  <column datatype='datetime' name='Scan Date' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.1pmvxzv1v0k6xf17b9tvx0rda9g9' name='flights_tableau.csv' table='[flights_tableau#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='From Airport Code' ordinal='0' />
                    <column datatype='string' name='From Country' ordinal='1' />
                    <column datatype='string' name='Dest Airport Code' ordinal='2' />
                    <column datatype='string' name='City,   State' ordinal='3' />
                    <column datatype='integer' name='ZIP Code' ordinal='4' />
                    <column datatype='string' name='Dest Country' ordinal='5' />
                    <column datatype='string' name='Aircraft Type' ordinal='6' />
                    <column datatype='string' name='Airline Number' ordinal='7' />
                    <column datatype='string' name='Airline Name' ordinal='8' />
                    <column datatype='string' name='Flight Number' ordinal='9' />
                    <column datatype='datetime' name='Departure Time' ordinal='10' />
                    <column datatype='datetime' name='Arrival Time' ordinal='11' />
                    <column datatype='integer' name='Duration' ordinal='12' />
                    <column datatype='integer' name='Stops' ordinal='13' />
                    <column datatype='integer' name='Price' ordinal='14' />
                    <column datatype='string' name='Currency' ordinal='15' />
                    <column datatype='integer' name='Co2 Emissions' ordinal='16' />
                    <column datatype='integer' name='Avg Co2 Emission For This Route' ordinal='17' />
                    <column datatype='real' name='Co2 Percentage' ordinal='18' />
                    <column datatype='datetime' name='Scan Date' ordinal='19' />
                  </columns>
                </relation>
                <relation connection='textscan.1pmvxzv1v0k6xf17b9tvx0rda9g9' name='flights_tableau.csv1' table='[flights_tableau#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='From Airport Code' ordinal='0' />
                    <column datatype='string' name='From Country' ordinal='1' />
                    <column datatype='string' name='Dest Airport Code' ordinal='2' />
                    <column datatype='string' name='City,   State' ordinal='3' />
                    <column datatype='integer' name='ZIP Code' ordinal='4' />
                    <column datatype='string' name='Dest Country' ordinal='5' />
                    <column datatype='string' name='Aircraft Type' ordinal='6' />
                    <column datatype='string' name='Airline Number' ordinal='7' />
                    <column datatype='string' name='Airline Name' ordinal='8' />
                    <column datatype='string' name='Flight Number' ordinal='9' />
                    <column datatype='datetime' name='Departure Time' ordinal='10' />
                    <column datatype='datetime' name='Arrival Time' ordinal='11' />
                    <column datatype='integer' name='Duration' ordinal='12' />
                    <column datatype='integer' name='Stops' ordinal='13' />
                    <column datatype='integer' name='Price' ordinal='14' />
                    <column datatype='string' name='Currency' ordinal='15' />
                    <column datatype='integer' name='Co2 Emissions' ordinal='16' />
                    <column datatype='integer' name='Avg Co2 Emission For This Route' ordinal='17' />
                    <column datatype='real' name='Co2 Percentage' ordinal='18' />
                    <column datatype='datetime' name='Scan Date' ordinal='19' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
          <object caption='hotels_usa.csv' id='hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9'>
            <properties context=''>
              <relation connection='textscan.1pmvxzv1v0k6xf17b9tvx0rda9g9' name='hotels_usa.csv' table='[hotels_usa#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='countyCode' ordinal='0' />
                  <column datatype='string' name='countyName' ordinal='1' />
                  <column datatype='integer' name='cityCode' ordinal='2' />
                  <column datatype='string' name='cityName' ordinal='3' />
                  <column datatype='integer' name='HotelCode' ordinal='4' />
                  <column datatype='string' name='HotelName' ordinal='5' />
                  <column datatype='string' name='HotelRating' ordinal='6' />
                  <column datatype='string' name='Address' ordinal='7' />
                  <column datatype='string' name='Attractions' ordinal='8' />
                  <column datatype='string' name='Description' ordinal='9' />
                  <column datatype='string' name='FaxNumber' ordinal='10' />
                  <column datatype='string' name='HotelFacilities' ordinal='11' />
                  <column datatype='string' name='Map' ordinal='12' />
                  <column datatype='string' name='PhoneNumber' ordinal='13' />
                  <column datatype='string' name='PinCode' ordinal='14' />
                  <column datatype='string' name='HotelWebsiteUrl' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[City,   State]' />
              <expression op='[cityName]' />
            </expression>
            <first-end-point object-id='flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3' />
            <second-end-point object-id='hotels_usa.csv_34BFBFB9A13541DBB688D1E323C493C9' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Hotel Rating by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data_usa.csv (Multiple Connections)' name='federated.0ubgqwk0tveaxz155y1ap1plja5e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ubgqwk0tveaxz155y1ap1plja5e'>
            <column caption='State Hotels' datatype='string' name='[Calculation_332984924983996421]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='TRIM(SPLIT([cityName], &quot;,&quot;, 2))' />
            </column>
            <column caption='State Code Hotels' datatype='string' name='[Calculation_332984924984299526]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_332984924983996421] = &apos;Alabama&apos; THEN &apos;AL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Alaska&apos; THEN &apos;AK&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Arizona&apos; THEN &apos;AZ&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Arkansas&apos; THEN &apos;AR&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;California&apos; THEN &apos;CA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Colorado&apos; THEN &apos;CO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Connecticut&apos; THEN &apos;CT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Delaware&apos; THEN &apos;DE&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Florida&apos; THEN &apos;FL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Georgia&apos; THEN &apos;GA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Hawaii&apos; THEN &apos;HI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Hawaii County&apos; THEN &apos;HI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Idaho&apos; THEN &apos;ID&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Illinois&apos; THEN &apos;IL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Indiana&apos; THEN &apos;IN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Iowa&apos; THEN &apos;IA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Kansas&apos; THEN &apos;KS&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Kentucky&apos; THEN &apos;KY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Louisiana&apos; THEN &apos;LA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Maine&apos; THEN &apos;ME&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Maryland&apos; THEN &apos;MD&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Massachusetts&apos; THEN &apos;MA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Michigan&apos; THEN &apos;MI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Minnesota&apos; THEN &apos;MN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Mississippi&apos; THEN &apos;MS&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;MISSOURI&apos; THEN &apos;MO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Missouri&apos; THEN &apos;MO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Montana&apos; THEN &apos;MT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Nebraska&apos; THEN &apos;NE&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Nevada&apos; THEN &apos;NV&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Hampshire&apos; THEN &apos;NH&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Jersey&apos; THEN &apos;NJ&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Mexico&apos; THEN &apos;NM&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New York&apos; THEN &apos;NY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;North Carolina&apos; THEN &apos;NC&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;North Dakota&apos; THEN &apos;ND&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Ohio&apos; THEN &apos;OH&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Oklahoma&apos; THEN &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Oregon&apos; THEN &apos;OR&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Pennsylvania&apos; THEN &apos;PA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Rhode Island&apos; THEN &apos;RI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;South Carolina&apos; THEN &apos;SC&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;South Dakota&apos; THEN &apos;SD&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Tennessee&apos; THEN &apos;TN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Texas&apos; THEN &apos;TX&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Utah&apos; THEN &apos;UT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Vermont&apos; THEN &apos;VT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Virginia&apos; THEN &apos;VA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Washington&apos; THEN &apos;WA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;West Virginia&apos; THEN &apos;WV&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Wisconsin&apos; THEN &apos;WI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Wyoming&apos; THEN &apos;WY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;District of Columbia&apos; THEN &apos;DC&apos;&#13;&#10;END' />
            </column>
            <column caption='Rating' datatype='integer' name='[Calculation_332984924987387912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [HotelRating] = &apos;OneStar&apos; THEN 1&#13;&#10;ELSEIF [HotelRating] = &apos;TwoStar&apos; THEN 2&#13;&#10;ELSEIF [HotelRating] = &apos;ThreeStar&apos; THEN 3&#13;&#10;ELSEIF [HotelRating] = &apos;FourStar&apos; THEN 4&#13;&#10;ELSEIF [HotelRating] = &apos;FiveStar&apos; THEN 5&#13;&#10;ELSEIF [HotelRating] = &apos;All&apos; THEN 0&#13;&#10;END' />
            </column>
            <column caption='Hotel Rating' datatype='string' name='[HotelRating]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_332984924987387912]' derivation='Avg' name='[avg:Calculation_332984924987387912:qk]' pivot='key' type='quantitative' />
            <column caption='City Name' datatype='string' name='[cityName]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_332984924984299526]' derivation='None' name='[none:Calculation_332984924984299526:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_332984924987387912:qk]' included-values='in-range'>
            <min>1.4062121823315854</min>
            <max>2.6624241237517134</max>
          </filter>
          <filter class='categorical' column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_332984924984299526:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]</column>
            <column>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_332984924987387912:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[Longitude (generated)]' field-type='quantitative' max='35963354.975807086' min='18260598.135999698' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[Latitude (generated)]' field-type='quantitative' max='11746059.695101816' min='1733950.6064241242' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_332984924987387912:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_332984924987387912:qk]' />
              <lod column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]' />
              <geometry column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[Latitude (generated)]</rows>
        <cols>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9CE41FF8-69C2-4C32-AB0C-099740644274}' />
    </worksheet>
    <worksheet name='Flights Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data_usa.csv (Multiple Connections)' name='federated.0ubgqwk0tveaxz155y1ap1plja5e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ubgqwk0tveaxz155y1ap1plja5e'>
            <column caption='Unique Flights' datatype='string' name='[Calculation_1278459372137807872]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([Flight Number]) + &quot;-&quot; + [From Country] + &quot;-&quot; + STR([ZIP Code])' />
            </column>
            <column caption='Path Order' datatype='integer' name='[Calculation_1278459372140072961]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Origin&apos; THEN 1 ELSE 2 END' />
            </column>
            <column aggregation='Avg' caption='Origin Latitude' datatype='real' name='[Calculation_1278459372143124484]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Origin&apos; THEN&#13;&#10;  IF [From Country] = &apos;Algeria&apos; THEN 28.0339&#13;&#10;  ELSEIF [From Country] = &apos;Argentina&apos; THEN -38.4161&#13;&#10;  ELSEIF [From Country] = &apos;Australia&apos; THEN -25.2744&#13;&#10;  ELSEIF [From Country] = &apos;Austria&apos; THEN 47.5162&#13;&#10;  ELSEIF [From Country] = &apos;Belgium&apos; THEN 50.5039&#13;&#10;  ELSEIF [From Country] = &apos;Brazil&apos; THEN -14.2350&#13;&#10;  ELSEIF [From Country] = &apos;Canada&apos; THEN 56.1304&#13;&#10;  ELSEIF [From Country] = &apos;Chile&apos; THEN -35.6751&#13;&#10;  ELSEIF [From Country] = &apos;China&apos; THEN 35.8617&#13;&#10;  ELSEIF [From Country] = &apos;Columbia&apos; THEN 4.5709&#13;&#10;  ELSEIF [From Country] = &apos;Denmark&apos; THEN 56.2639&#13;&#10;  ELSEIF [From Country] = &apos;Dublin&apos; THEN 53.3498&#13;&#10;  ELSEIF [From Country] = &apos;Egypt&apos; THEN 26.8206&#13;&#10;  ELSEIF [From Country] = &apos;Ethiopia&apos; THEN 9.1450&#13;&#10;  ELSEIF [From Country] = &apos;France&apos; THEN 46.2276&#13;&#10;  ELSEIF [From Country] = &apos;Germany&apos; THEN 51.1657&#13;&#10;  ELSEIF [From Country] = &apos;Greece&apos; THEN 39.0742&#13;&#10;  ELSEIF [From Country] = &apos;India&apos; THEN 20.5937&#13;&#10;  ELSE NULL&#13;&#10;END&#13;&#10;ELSE NULL&#13;&#10;END' />
            </column>
            <column aggregation='Avg' caption='Origin Longitude' datatype='real' name='[Calculation_1278459372146323461]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Origin&apos; THEN&#13;&#10;  IF [From Country] = &apos;Algeria&apos; THEN 1.6596&#13;&#10;  ELSEIF [From Country] = &apos;Argentina&apos; THEN -63.6167&#13;&#10;  ELSEIF [From Country] = &apos;Australia&apos; THEN 133.7751&#13;&#10;  ELSEIF [From Country] = &apos;Austria&apos; THEN 14.5501&#13;&#10;  ELSEIF [From Country] = &apos;Belgium&apos; THEN 4.4699&#13;&#10;  ELSEIF [From Country] = &apos;Brazil&apos; THEN -51.9253&#13;&#10;  ELSEIF [From Country] = &apos;Canada&apos; THEN -106.3468&#13;&#10;  ELSEIF [From Country] = &apos;Chile&apos; THEN -71.5430&#13;&#10;  ELSEIF [From Country] = &apos;China&apos; THEN 104.1954&#13;&#10;  ELSEIF [From Country] = &apos;Columbia&apos; THEN -74.2973 // Colombia&#13;&#10;  ELSEIF [From Country] = &apos;Denmark&apos; THEN 9.5018&#13;&#10;  ELSEIF [From Country] = &apos;Dublin&apos; THEN -6.2603&#13;&#10;  ELSEIF [From Country] = &apos;Egypt&apos; THEN 30.8025&#13;&#10;  ELSEIF [From Country] = &apos;Ethiopia&apos; THEN 40.4897&#13;&#10;  ELSEIF [From Country] = &apos;France&apos; THEN 2.2137&#13;&#10;  ELSEIF [From Country] = &apos;Germany&apos; THEN 10.4515&#13;&#10;  ELSEIF [From Country] = &apos;Greece&apos; THEN 21.8243&#13;&#10;  ELSEIF [From Country] = &apos;India&apos; THEN 78.9629&#13;&#10;  ELSE NULL&#13;&#10;END&#13;&#10;ELSE NULL&#13;&#10;END' />
            </column>
            <column aggregation='Avg' caption='Dest Latitude' datatype='real' name='[Calculation_1278459372147580934]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Destination&apos; THEN&#13;&#10;  IF [ZIP Code] = 11430 THEN 40.7767&#13;&#10;  ELSEIF [ZIP Code] = 28208 THEN 35.2010&#13;&#10;  ELSEIF [ZIP Code] = 30320 THEN 33.6762&#13;&#10;  ELSEIF [ZIP Code] = 32827 THEN 28.4290&#13;&#10;  ELSEIF [ZIP Code] = 33142 THEN 25.7923&#13;&#10;  ELSEIF [ZIP Code] = 33315 THEN 26.1844&#13;&#10;  ELSEIF [ZIP Code] = 60666 THEN 41.9760&#13;&#10;  ELSEIF [ZIP Code] = 77032 THEN 29.6974&#13;&#10;  ELSEIF [ZIP Code] = 85034 THEN 33.4942&#13;&#10;  ELSEIF [ZIP Code] = 90045 THEN 33.9568&#13;&#10;  ELSEIF [ZIP Code] = 94128 THEN 37.7263&#13;&#10;  ELSEIF [ZIP Code] = 98158 THEN 47.5187&#13;&#10;  ELSE NULL&#13;&#10;END&#13;&#10;ELSE NULL&#13;&#10;END' />
            </column>
            <column aggregation='Avg' caption='Dest Longitude' datatype='real' name='[Calculation_1278459372148592647]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Destination&apos; THEN&#13;&#10;  IF [ZIP Code] = 11430 THEN -73.8301&#13;&#10;  ELSEIF [ZIP Code] = 28208 THEN -80.8480&#13;&#10;  ELSEIF [ZIP Code] = 30320 THEN -84.4173&#13;&#10;  ELSEIF [ZIP Code] = 32827 THEN -81.4683&#13;&#10;  ELSEIF [ZIP Code] = 33142 THEN -80.2080&#13;&#10;  ELSEIF [ZIP Code] = 33315 THEN -80.2393&#13;&#10;  ELSEIF [ZIP Code] = 60666 THEN -87.9073&#13;&#10;  ELSEIF [ZIP Code] = 77032 THEN -95.3298&#13;&#10;  ELSEIF [ZIP Code] = 85034 THEN -112.0780&#13;&#10;  ELSEIF [ZIP Code] = 90045 THEN -118.4015&#13;&#10;  ELSEIF [ZIP Code] = 94128 THEN -122.3921&#13;&#10;  ELSEIF [ZIP Code] = 98158 THEN -122.3977&#13;&#10;  ELSE NULL&#13;&#10;END&#13;&#10;ELSE NULL&#13;&#10;END' />
            </column>
            <column aggregation='Avg' caption='Combined Latitude' datatype='real' name='[Calculation_1278459372151197704]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Origin&apos; THEN [Calculation_1278459372143124484]&#13;&#10;ELSEIF [Calculation_332984924998316046] = &apos;Destination&apos; THEN [Calculation_1278459372147580934]&#13;&#10;ELSE NULL&#13;&#10;END' />
            </column>
            <column aggregation='Avg' caption='Combined Longitude' datatype='real' name='[Calculation_1278459372151250953]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_332984924998316046] = &apos;Origin&apos; THEN [Calculation_1278459372146323461]&#13;&#10;ELSEIF [Calculation_332984924998316046] = &apos;Destination&apos; THEN [Calculation_1278459372148592647]&#13;&#10;ELSE NULL&#13;&#10;END' />
            </column>
            <column caption='Point Type' datatype='string' name='[Calculation_332984924998316046]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name] = &apos;flights_tableau.csv&apos; THEN &apos;Origin&apos;&#13;&#10;ELSE &apos;Destination&apos;&#13;&#10;END' />
            </column>
            <column caption='To City, State' datatype='string' name='[City,   State]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Flight Number]' role='dimension' type='nominal' />
            <column datatype='string' name='[From Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' default-format='*00000' name='[ZIP Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[__tableau_internal_object_id__].[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3:qk]' pivot='key' type='quantitative' />
            <column caption='flights_tableau.csv' datatype='table' name='[__tableau_internal_object_id__].[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]' role='measure' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1278459372140072961]' derivation='Min' name='[min:Calculation_1278459372140072961:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1278459372137807872]' derivation='None' name='[none:Calculation_1278459372137807872:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1278459372151197704]' derivation='None' name='[none:Calculation_1278459372151197704:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1278459372151250953]' derivation='None' name='[none:Calculation_1278459372151250953:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City,   State]' derivation='None' name='[none:City,   State:nk]' pivot='key' type='nominal' />
            <column-instance column='[From Country]' derivation='None' name='[none:From Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1278459372140072961]' derivation='Sum' name='[sum:Calculation_1278459372140072961:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[__tableau_internal_object_id__].[cnt:flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3:qk]' included-values='in-range'>
            <min>1</min>
            <max>329</max>
          </filter>
          <filter class='quantitative' column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Price:qk]' included-values='in-range'>
            <min>76.0</min>
            <max>58223.222222222219</max>
          </filter>
          <filter class='categorical' column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:City,   State:nk]'>
            <groupfilter function='level-members' level='[none:City,   State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:From Country:nk]'>
            <groupfilter function='level-members' level='[none:From Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:From Country:nk]</column>
            <column>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:City,   State:nk]</column>
            <column>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[__tableau_internal_object_id__].[cnt:flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3:qk]</column>
            <column>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Price:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372151250953:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[min:Calculation_1278459372140072961:qk]' palette='red_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372137807872:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372151250953:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372137807872:nk]' />
              <lod column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:From Country:nk]' />
              <lod column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:City,   State:nk]' />
              <lod column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[__tableau_internal_object_id__].[cnt:flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3:qk]' />
              <lod column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Price:qk]' />
              <path column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[sum:Calculation_1278459372140072961:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#606b76' />
                <format attr='mark-transparency' value='4' />
                <format attr='has-halo' value='false' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372151250953:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[min:Calculation_1278459372140072961:qk]' />
              <lod column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372137807872:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372151197704:qk]</rows>
        <cols>([federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372151250953:qk] + [federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372151250953:qk])</cols>
      </table>
      <simple-id uuid='{D205DFB7-F8E5-407A-9517-009E44FA1C9B}' />
    </worksheet>
    <worksheet name='Number of Hotels by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flight_data_usa.csv (Multiple Connections)' name='federated.0ubgqwk0tveaxz155y1ap1plja5e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ubgqwk0tveaxz155y1ap1plja5e'>
            <column caption='State Hotels' datatype='string' name='[Calculation_332984924983996421]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='TRIM(SPLIT([cityName], &quot;,&quot;, 2))' />
            </column>
            <column caption='State Code Hotels' datatype='string' name='[Calculation_332984924984299526]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_332984924983996421] = &apos;Alabama&apos; THEN &apos;AL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Alaska&apos; THEN &apos;AK&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Arizona&apos; THEN &apos;AZ&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Arkansas&apos; THEN &apos;AR&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;California&apos; THEN &apos;CA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Colorado&apos; THEN &apos;CO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Connecticut&apos; THEN &apos;CT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Delaware&apos; THEN &apos;DE&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Florida&apos; THEN &apos;FL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Georgia&apos; THEN &apos;GA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Hawaii&apos; THEN &apos;HI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Hawaii County&apos; THEN &apos;HI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Idaho&apos; THEN &apos;ID&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Illinois&apos; THEN &apos;IL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Indiana&apos; THEN &apos;IN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Iowa&apos; THEN &apos;IA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Kansas&apos; THEN &apos;KS&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Kentucky&apos; THEN &apos;KY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Louisiana&apos; THEN &apos;LA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Maine&apos; THEN &apos;ME&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Maryland&apos; THEN &apos;MD&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Massachusetts&apos; THEN &apos;MA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Michigan&apos; THEN &apos;MI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Minnesota&apos; THEN &apos;MN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Mississippi&apos; THEN &apos;MS&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;MISSOURI&apos; THEN &apos;MO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Missouri&apos; THEN &apos;MO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Montana&apos; THEN &apos;MT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Nebraska&apos; THEN &apos;NE&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Nevada&apos; THEN &apos;NV&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Hampshire&apos; THEN &apos;NH&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Jersey&apos; THEN &apos;NJ&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Mexico&apos; THEN &apos;NM&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New York&apos; THEN &apos;NY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;North Carolina&apos; THEN &apos;NC&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;North Dakota&apos; THEN &apos;ND&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Ohio&apos; THEN &apos;OH&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Oklahoma&apos; THEN &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Oregon&apos; THEN &apos;OR&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Pennsylvania&apos; THEN &apos;PA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Rhode Island&apos; THEN &apos;RI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;South Carolina&apos; THEN &apos;SC&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;South Dakota&apos; THEN &apos;SD&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Tennessee&apos; THEN &apos;TN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Texas&apos; THEN &apos;TX&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Utah&apos; THEN &apos;UT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Vermont&apos; THEN &apos;VT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Virginia&apos; THEN &apos;VA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Washington&apos; THEN &apos;WA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;West Virginia&apos; THEN &apos;WV&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Wisconsin&apos; THEN &apos;WI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Wyoming&apos; THEN &apos;WY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;District of Columbia&apos; THEN &apos;DC&apos;&#13;&#10;END' />
            </column>
            <column caption='Number of Hotels per State' datatype='integer' name='[Calculation_332984924985552903]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_332984924984299526])' />
            </column>
            <column caption='City Name' datatype='string' name='[cityName]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_332984924984299526]' derivation='None' name='[none:Calculation_332984924984299526:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_332984924985552903]' derivation='User' name='[usr:Calculation_332984924985552903:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_332984924984299526:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[usr:Calculation_332984924985552903:qk]' included-values='in-range'>
            <min>0</min>
            <max>25375</max>
          </filter>
          <slices>
            <column>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]</column>
            <column>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[usr:Calculation_332984924985552903:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[Longitude (generated)]' field-type='quantitative' max='35963354.975807086' min='18260598.135999698' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[Latitude (generated)]' field-type='quantitative' max='11746059.695101816' min='1733950.6064241242' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[usr:Calculation_332984924985552903:qk]' max='5000' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[usr:Calculation_332984924985552903:qk]' />
              <lod column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]' />
              <geometry column='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[Latitude (generated)]</rows>
        <cols>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2429EF29-2B92-43B3-89FC-F5A28A9F39CE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='flight_data_usa.csv (Multiple Connections)' name='federated.0ubgqwk0tveaxz155y1ap1plja5e' />
      </datasources>
      <datasource-dependencies datasource='federated.0ubgqwk0tveaxz155y1ap1plja5e'>
        <column caption='State Code Hotels' datatype='string' name='[Calculation_332984924984299526]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='tableau' formula='IF [Calculation_332984924983996421] = &apos;Alabama&apos; THEN &apos;AL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Alaska&apos; THEN &apos;AK&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Arizona&apos; THEN &apos;AZ&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Arkansas&apos; THEN &apos;AR&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;California&apos; THEN &apos;CA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Colorado&apos; THEN &apos;CO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Connecticut&apos; THEN &apos;CT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Delaware&apos; THEN &apos;DE&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Florida&apos; THEN &apos;FL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Georgia&apos; THEN &apos;GA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Hawaii&apos; THEN &apos;HI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Hawaii County&apos; THEN &apos;HI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Idaho&apos; THEN &apos;ID&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Illinois&apos; THEN &apos;IL&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Indiana&apos; THEN &apos;IN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Iowa&apos; THEN &apos;IA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Kansas&apos; THEN &apos;KS&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Kentucky&apos; THEN &apos;KY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Louisiana&apos; THEN &apos;LA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Maine&apos; THEN &apos;ME&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Maryland&apos; THEN &apos;MD&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Massachusetts&apos; THEN &apos;MA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Michigan&apos; THEN &apos;MI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Minnesota&apos; THEN &apos;MN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Mississippi&apos; THEN &apos;MS&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;MISSOURI&apos; THEN &apos;MO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Missouri&apos; THEN &apos;MO&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Montana&apos; THEN &apos;MT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Nebraska&apos; THEN &apos;NE&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Nevada&apos; THEN &apos;NV&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Hampshire&apos; THEN &apos;NH&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Jersey&apos; THEN &apos;NJ&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New Mexico&apos; THEN &apos;NM&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;New York&apos; THEN &apos;NY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;North Carolina&apos; THEN &apos;NC&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;North Dakota&apos; THEN &apos;ND&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Ohio&apos; THEN &apos;OH&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Oklahoma&apos; THEN &apos;OK&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Oregon&apos; THEN &apos;OR&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Pennsylvania&apos; THEN &apos;PA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Rhode Island&apos; THEN &apos;RI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;South Carolina&apos; THEN &apos;SC&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;South Dakota&apos; THEN &apos;SD&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Tennessee&apos; THEN &apos;TN&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Texas&apos; THEN &apos;TX&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Utah&apos; THEN &apos;UT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Vermont&apos; THEN &apos;VT&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Virginia&apos; THEN &apos;VA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Washington&apos; THEN &apos;WA&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;West Virginia&apos; THEN &apos;WV&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Wisconsin&apos; THEN &apos;WI&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;Wyoming&apos; THEN &apos;WY&apos;&#13;&#10;ELSEIF [Calculation_332984924983996421] = &apos;District of Columbia&apos; THEN &apos;DC&apos;&#13;&#10;END' />
        </column>
        <column caption='Number of Hotels per State' datatype='integer' name='[Calculation_332984924985552903]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='COUNT([Calculation_332984924984299526])' />
        </column>
        <column caption='Rating' datatype='integer' name='[Calculation_332984924987387912]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF [HotelRating] = &apos;OneStar&apos; THEN 1&#13;&#10;ELSEIF [HotelRating] = &apos;TwoStar&apos; THEN 2&#13;&#10;ELSEIF [HotelRating] = &apos;ThreeStar&apos; THEN 3&#13;&#10;ELSEIF [HotelRating] = &apos;FourStar&apos; THEN 4&#13;&#10;ELSEIF [HotelRating] = &apos;FiveStar&apos; THEN 5&#13;&#10;ELSEIF [HotelRating] = &apos;All&apos; THEN 0&#13;&#10;END' />
        </column>
        <column caption='To City, State' datatype='string' name='[City,   State]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='string' name='[From Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
        <column-instance column='[__tableau_internal_object_id__].[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3:qk]' pivot='key' type='quantitative' />
        <column caption='flights_tableau.csv' datatype='table' name='[__tableau_internal_object_id__].[flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3]' role='measure' type='quantitative' />
        <column-instance column='[Calculation_332984924987387912]' derivation='Avg' name='[avg:Calculation_332984924987387912:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_332984924984299526]' derivation='None' name='[none:Calculation_332984924984299526:nk]' pivot='key' type='nominal' />
        <column-instance column='[City,   State]' derivation='None' name='[none:City,   State:nk]' pivot='key' type='nominal' />
        <column-instance column='[From Country]' derivation='None' name='[none:From Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_332984924985552903]' derivation='User' name='[usr:Calculation_332984924985552903:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='48958' id='28' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='48958' id='26' type-v2='layout-basic' w='87115' x='586' y='1042'>
              <zone h='48958' id='25' name='Flights Map' w='87115' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='48958' id='27' is-fixed='true' param='vert' type-v2='layout-flow' w='11713' x='87701' y='1042'>
              <zone h='9506' id='29' name='Flights Map' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='87701' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9506' id='30' name='Flights Map' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[__tableau_internal_object_id__].[cnt:flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='87701' y='10548'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7943' id='31' mode='dropdown' name='Flights Map' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:City,   State:nk]' type-v2='filter' w='11713' x='87701' y='20054'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7943' id='32' mode='dropdown' name='Flights Map' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:From Country:nk]' type-v2='filter' w='11713' x='87701' y='27997'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='48958' id='39' name='Number of Hotels by State' w='37701' x='586' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48958' id='43' name='Average Hotel Rating by State' w='37701' x='50000' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7813' id='45' mode='dropdown' name='Average Hotel Rating by State' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]' type-v2='filter' w='11713' x='87701' y='91145'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='31379' id='46' name='Average Hotel Rating by State' pane-specification-id='0' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_332984924987387912:qk]' type-v2='color' w='11713' x='87701' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7943' id='41' mode='dropdown' name='Number of Hotels by State' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]' type-v2='filter' w='11713' x='38287' y='91015'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='31249' id='42' name='Number of Hotels by State' pane-specification-id='0' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[usr:Calculation_332984924985552903:qk]' type-v2='color' w='11713' x='38287' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='9766' id='40' name='Number of Hotels by State' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[usr:Calculation_332984924985552903:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='38287' y='81249'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='9766' id='44' name='Average Hotel Rating by State' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_332984924987387912:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='87701' y='81379'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='47' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='9506' id='29' name='Flights Map' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='87701' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9506' id='30' name='Flights Map' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[__tableau_internal_object_id__].[cnt:flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='87701' y='10548'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7943' id='31' mode='dropdown' name='Flights Map' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:City,   State:nk]' type-v2='filter' w='11713' x='87701' y='20054'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7943' id='32' mode='dropdown' name='Flights Map' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:From Country:nk]' type-v2='filter' w='11713' x='87701' y='27997'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='25' is-fixed='true' name='Flights Map' w='87115' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7943' id='41' mode='dropdown' name='Number of Hotels by State' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]' type-v2='filter' w='11713' x='38287' y='91015'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9766' id='40' name='Number of Hotels by State' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[usr:Calculation_332984924985552903:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='38287' y='81249'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='39' is-fixed='true' name='Number of Hotels by State' w='37701' x='586' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='31249' id='42' name='Number of Hotels by State' pane-specification-id='0' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[usr:Calculation_332984924985552903:qk]' type-v2='color' w='11713' x='38287' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7813' id='45' mode='dropdown' name='Average Hotel Rating by State' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]' type-v2='filter' w='11713' x='87701' y='91145'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9766' id='44' name='Average Hotel Rating by State' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_332984924987387912:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='11713' x='87701' y='81379'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='43' is-fixed='true' name='Average Hotel Rating by State' w='37701' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='31379' id='46' name='Average Hotel Rating by State' pane-specification-id='0' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_332984924987387912:qk]' type-v2='color' w='11713' x='87701' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DDDF0A4D-F6FB-4288-8963-266036D13904}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Number of Hotels by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[usr:Calculation_332984924985552903:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[usr:Calculation_332984924985552903:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924982915076:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924983996421:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:City,   State:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:PinCode:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:cityCode:ok]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:cityName:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:countyCode:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:countyName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3541EA8F-6348-49CF-B353-581D74B3916C}' />
    </window>
    <window class='worksheet' name='Average Hotel Rating by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_332984924987387912:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_332984924987387912:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Calculation_332984924987387912:qk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924982915076:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924983996421:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924984299526:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:City,   State:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:PinCode:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:cityCode:ok]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:cityName:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:countyCode:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:countyName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{469EB185-D3D5-48F5-85BC-D60A25243FEF}' />
    </window>
    <window class='worksheet' name='Flights Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[avg:Price:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[__tableau_internal_object_id__].[cnt:flights_tableau.csv_F893FFCE7FF84EE884B74C27252257B3:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:City,   State:nk]' type='filter' />
            <card mode='dropdown' param='[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:From Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[min:Calculation_1278459372140072961:qk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Airline Number:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372137807872:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372151197704:qk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_1278459372151250953:qk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Calculation_332984924991410186:ok]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:City,   State:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:Flight Number:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:From Country:nk]</field>
            <field>[federated.0ubgqwk0tveaxz155y1ap1plja5e].[none:ZIP Code:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{56D288BD-C860-40E4-A7BA-9305A9755FBF}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Average Hotel Rating by State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Flights Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Hotels by State'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{623742F8-CE99-49C7-B448-1D437D757C0C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Hotel Rating by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Flights Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Hotels by State' width='192'>
      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
      ARPNOXhp0wAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
